June 1, 2018 added
	I ultimately test the files which are generated by my little compiler
	on a laptop with Ubuntu, and they passed the test.
	Thank for the God.

make 之後會產生執行檔 gen 代表 generator
(不要吐槽，我只是懶得每次打generator 才打gen)

有一些shift/reduce conflicts 的錯誤，不過因為我這邊的測試程式沒事我就懶得管了

使用方法為./gen filename.rust

因為C main function 寫在parser.y 文件裡，所以好像只能這樣用嗎？我也不確定

總之請這樣使用吧！！！

如此一來，就會產生.jasm檔案可以在linux環境在透過javaa轉成.class正確以JVM執行

我的C main func有直接執行兩行system() 指令，所以理論上不用助教自己
./javaa *.jasm
java *.class
因為我資料夾裡有放javaa executable，然後助教的伺服器有JVM，老師的應該也有吧？？

parser.y 裡將除了integer-type 之外的變數文法都刪掉了
就如proj3.pdf 裡所給予的限制去做修改

* No READ statements.
* No declaration of use of arrays.
* No floating-point numbers.
* No string variables.

不過像常數宣告如：

  let a = 10;
  let b = true;
  let s = "string";

依然合法，除了float-type constant declaration

||, &&, and !，現在產生的語法不對，希望我解決得了。

** June 12, 2018
終於有點起色，現在像 10 && 1 這種可以正確運作了，不過 (c < 10) || (c > 10) 這種還要處理

不過基本的四個測資當然都沒問題

scanner.l 多了一個char array 存rust檔案裡的內容，然後最後這些會被當作註解寫在
jasm檔案裡

May 26, 2018
更正：我後面發現這樣執行javaa會報syntax error，所以我還是拿掉了
June 2, 2018
更正：會報錯是因為我在Mac OS上執行的關係，在Ubuntu可以正確執行，不過我還是沒加回去
	倒是測過答案，應該沒啥問題
更正：很神奇的是註解加上去javaa會報錯，因此我還是把註解拿掉了

每次編譯完一個程式都會產生一個jasm，一個local.out，一個dump.out

jasm 當然就是專案要產生的內容

local.out 是編譯完rust檔案之後，裡面會紀錄local variables的數目與相應的counter

dump.out 之前就有，裡面存所有的ID，相對的類型與出現的行數，雖然行數現在會因為
我插入方法的改變而錯誤，不過還是可以確認有什麼ID

現行專案if-else statement 經過我多方嘗試產生代碼成功

存粹 if statement 也沒問題，我自己有多放一個ifstmt.rust 測試這件事

while statement 也是執行正確

以上感謝您的閱讀，祝您暑假愉快，請讓我All pass

 > < b 謝謝
